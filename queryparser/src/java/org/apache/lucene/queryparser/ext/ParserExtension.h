#pragma once
#include "stringhelper.h"
#include <memory>

// C++ NOTE: Forward class declarations:
#include  "core/src/java/org/apache/lucene/search/Query.h"

#include  "core/src/java/org/apache/lucene/queryparser/ext/ExtensionQuery.h"

/*
 * Licensed to the Syed Mamun Raihan (sraihan.com) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * sraihan.com licenses this file to You under GPLv3 License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     https://www.gnu.org/licenses/gpl-3.0.en.html
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace org::apache::lucene::queryparser::ext
{

using ParseException =
    org::apache::lucene::queryparser::classic::ParseException;
using Query = org::apache::lucene::search::Query;

/**
 * This class represents an extension base class to the Lucene standard
 * {@link org.apache.lucene.queryparser.classic.QueryParser}. The
GET_CLASS_NAME(represents)
 * {@link org.apache.lucene.queryparser.classic.QueryParser} is generated by the
JavaCC
 * parser generator. Changing or adding functionality or syntax in the standard
 * query parser requires changes to the JavaCC source file. To enable extending
 * the standard query parser without changing the JavaCC sources and re-generate
 * the parser the {@link ParserExtension} can be customized and plugged into an
 * instance of {@link ExtendableQueryParser}, a direct subclass of
 * {@link org.apache.lucene.queryparser.classic.QueryParser}.
GET_CLASS_NAME(of)
 *
 * @see Extensions
 * @see ExtendableQueryParser
 */
class ParserExtension : public std::enable_shared_from_this<ParserExtension>
{
  GET_CLASS_NAME(ParserExtension)

  /**
   * Processes the given {@link ExtensionQuery} and returns a corresponding
   * {@link Query} instance. Subclasses must either return a {@link Query}
   * instance or raise a {@link ParseException}. This method must not return
GET_CLASS_NAME(es)
   * <code>null</code>.
   *
   * @param query
   *          the extension query
   * @return a new query instance
   * @throws ParseException
   *           if the query can not be parsed.
   */
public:
  virtual std::shared_ptr<Query>
  parse(std::shared_ptr<ExtensionQuery> query) = 0;
};

} // #include  "core/src/java/org/apache/lucene/queryparser/ext/
