#pragma once
#include "stringhelper.h"
#include <memory>

// C++ NOTE: Forward class declarations:
#include  "core/src/java/org/apache/lucene/queryparser/flexible/core/config/QueryConfigHandler.h"

/*
 * Licensed to the Syed Mamun Raihan (sraihan.com) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * sraihan.com licenses this file to You under GPLv3 License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     https://www.gnu.org/licenses/gpl-3.0.en.html
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace org::apache::lucene::queryparser::flexible::standard::processors
{

using QueryConfigHandler = org::apache::lucene::queryparser::flexible::core::
    config::QueryConfigHandler;
using QueryNodeProcessorPipeline = org::apache::lucene::queryparser::flexible::
    core::processors::QueryNodeProcessorPipeline;

/**
 * This pipeline has all the processors needed to process a query node tree,
 * generated by {@link StandardSyntaxParser}, already assembled. <br>
 * <br>
 * The order they are assembled affects the results. <br>
 * <br>
 * This processor pipeline was designed to work with
 * {@link StandardQueryConfigHandler}. <br>
 * <br>
 * The result query node tree can be used to build a {@link Query} object using
 * {@link StandardQueryTreeBuilder}.
 *
 * @see StandardQueryTreeBuilder
 * @see StandardQueryConfigHandler
 * @see StandardSyntaxParser
 */
class StandardQueryNodeProcessorPipeline : public QueryNodeProcessorPipeline
{
  GET_CLASS_NAME(StandardQueryNodeProcessorPipeline)

public:
  StandardQueryNodeProcessorPipeline(
      std::shared_ptr<QueryConfigHandler> queryConfig);

protected:
  std::shared_ptr<StandardQueryNodeProcessorPipeline> shared_from_this()
  {
    return std::static_pointer_cast<StandardQueryNodeProcessorPipeline>(
        org.apache.lucene.queryparser.flexible.core.processors
            .QueryNodeProcessorPipeline::shared_from_this());
  }
};

} // #include  "core/src/java/org/apache/lucene/queryparser/flexible/standard/processors/
